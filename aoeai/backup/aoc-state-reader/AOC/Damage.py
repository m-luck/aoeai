# automatically generated by the FlatBuffers compiler, do not modify

# namespace: AOC

import flatbuffers

class Damage(object):
    __slots__ = ['_tab']

    # Damage
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # Damage
    def GameTick(self): return self._tab.Get(flatbuffers.number_types.Uint32Flags, self._tab.Pos + flatbuffers.number_types.UOffsetTFlags.py_type(0))
    # Damage
    def AttackerId(self): return self._tab.Get(flatbuffers.number_types.Int32Flags, self._tab.Pos + flatbuffers.number_types.UOffsetTFlags.py_type(4))
    # Damage
    def ProjectileId(self): return self._tab.Get(flatbuffers.number_types.Uint32Flags, self._tab.Pos + flatbuffers.number_types.UOffsetTFlags.py_type(8))
    # Damage
    def DamagedId(self): return self._tab.Get(flatbuffers.number_types.Int32Flags, self._tab.Pos + flatbuffers.number_types.UOffsetTFlags.py_type(12))
    # Damage
    def DamageDone(self): return self._tab.Get(flatbuffers.number_types.Float32Flags, self._tab.Pos + flatbuffers.number_types.UOffsetTFlags.py_type(16))

def CreateDamage(builder, gameTick, attackerId, projectileId, damagedId, damageDone):
    builder.Prep(4, 20)
    builder.PrependFloat32(damageDone)
    builder.PrependInt32(damagedId)
    builder.PrependUint32(projectileId)
    builder.PrependInt32(attackerId)
    builder.PrependUint32(gameTick)
    return builder.Offset()

# automatically generated by the FlatBuffers compiler, do not modify

# namespace: AOC

import flatbuffers

class ProjectileFire(object):
    __slots__ = ['_tab']

    # ProjectileFire
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # ProjectileFire
    def GameTick(self): return self._tab.Get(flatbuffers.number_types.Uint32Flags, self._tab.Pos + flatbuffers.number_types.UOffsetTFlags.py_type(0))
    # ProjectileFire
    def ProjectileId(self): return self._tab.Get(flatbuffers.number_types.Uint32Flags, self._tab.Pos + flatbuffers.number_types.UOffsetTFlags.py_type(4))
    # ProjectileFire
    def SourceId(self): return self._tab.Get(flatbuffers.number_types.Int32Flags, self._tab.Pos + flatbuffers.number_types.UOffsetTFlags.py_type(8))
    # ProjectileFire
    def TargetId(self): return self._tab.Get(flatbuffers.number_types.Int32Flags, self._tab.Pos + flatbuffers.number_types.UOffsetTFlags.py_type(12))
    # ProjectileFire
    def Type(self): return self._tab.Get(flatbuffers.number_types.Int16Flags, self._tab.Pos + flatbuffers.number_types.UOffsetTFlags.py_type(16))
    # ProjectileFire
    def IsPrimary(self): return self._tab.Get(flatbuffers.number_types.BoolFlags, self._tab.Pos + flatbuffers.number_types.UOffsetTFlags.py_type(18))

def CreateProjectileFire(builder, gameTick, projectileId, sourceId, targetId, type, isPrimary):
    builder.Prep(4, 20)
    builder.Pad(1)
    builder.PrependBool(isPrimary)
    builder.PrependInt16(type)
    builder.PrependInt32(targetId)
    builder.PrependInt32(sourceId)
    builder.PrependUint32(projectileId)
    builder.PrependUint32(gameTick)
    return builder.Offset()
